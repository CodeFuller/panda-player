<Window x:Class="PandaPlayer.Views.AdviseSetsEditorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:interfaces="clr-namespace:PandaPlayer.ViewModels.Interfaces"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:views="clr-namespace:PandaPlayer.Views"
        xmlns:controls="clr-namespace:CodeFuller.Library.Wpf.Controls;assembly=CodeFuller.Library.Wpf"
        mc:Ignorable="d"
        Title="Advise Sets Editor"
        WindowStartupLocation="CenterOwner" Width="1400" Height="800"
        d:DataContext="{d:DesignInstance interfaces:IAdviseSetsEditorViewModel}">

    <Window.Style>
        <Style TargetType="{x:Type Window}" BasedOn="{StaticResource AppWindowStyle}" />
    </Window.Style>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <Label Grid.Column="0" Grid.Row="0" Margin="0,0,5,0" Content="Advise Sets:" />
        <!-- We use DataGrid, not ListBox as for other lists, for built-in capability of in-place edit. -->
        <views:AdviseSetsDataGrid x:Name="AdviseSetsDataGrid" Grid.Column="0" Grid.Row="1" Margin="0,0,5,0" BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueLightBrush}"
                                Style="{StaticResource MaterialDesignDataGrid}" CellStyle="{StaticResource InvisibleFocusDataGridCell}" GridLinesVisibility="None"
                                AutoGenerateColumns="False" IsReadOnly="False" HeadersVisibility="None"
                                CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" CanUserSortColumns="False"
                                ItemsSource="{Binding AdviseSets}" SelectedItem="{Binding SelectedAdviseSet}">
            <DataGrid.Columns>
                <DataGridTextColumn Width="*" Binding="{Binding Name}" />
            </DataGrid.Columns>
        </views:AdviseSetsDataGrid>

        <Label Grid.Column="1" Grid.Row="0" Margin="5,0,5,0" Content="Included Discs:" />
        <ListBox Grid.Column="1" Grid.Row="1" Margin="5,0,5,0" BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueLightBrush}"
                 ItemsSource="{Binding CurrentAdviseSetDiscs}" SelectedItem="{Binding Path=SelectedAdviseSetDisc, Mode=TwoWay}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding TreeTitle}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <StackPanel Grid.Column="2" Grid.Row="1" Margin="5,0,5,0" Orientation="Vertical">
            <Button IsEnabled="{Binding CanCreateAdviseSet}" Command="{Binding CreateAdviseSetCommand}" ToolTip="Create new advise set">
                <materialDesign:PackIcon Width="Auto" Height="Auto" Kind="PlusCircle" />
            </Button>
            <Button Margin="0,5,0,0" IsEnabled="{Binding CanDeleteAdviseSet}" Command="{Binding DeleteAdviseSetCommand}" ToolTip="Delete advise set">
                <materialDesign:PackIcon Width="Auto" Height="Auto" Kind="DeleteForever" />
            </Button>
            <Button Margin="0,5,0,0" IsEnabled="{Binding CanAddDiscs}" Command="{Binding AddDiscsCommand}" ToolTip="Add selected disc(s) to advise set">
                <materialDesign:PackIcon Width="Auto" Height="Auto" Kind="ArrowLeftBold" />
            </Button>
            <Button Margin="0,5,0,0" IsEnabled="{Binding CanRemoveDisc}" Command="{Binding RemoveDiscCommand}" ToolTip="Remove selected disc from advise set">
                <materialDesign:PackIcon Width="Auto" Height="Auto" Kind="ArrowRightBold" />
            </Button>
            <Button Margin="0,5,0,0" IsEnabled="{Binding CanMoveDiscUp}" Command="{Binding MoveDiscUpCommand}" ToolTip="Move selected disc up in advise set">
                <materialDesign:PackIcon Width="Auto" Height="Auto" Kind="ArrowUpBold" />
            </Button>
            <Button Margin="0,5,0,0" IsEnabled="{Binding CanMoveDiscDown}" Command="{Binding MoveDiscDownCommand}" ToolTip="Move selected disc down in advise set">
                <materialDesign:PackIcon Width="Auto" Height="Auto" Kind="ArrowDownBold" />
            </Button>
        </StackPanel>

        <Label Grid.Column="3" Grid.Row="0" Margin="5,0,0,0" Content="Available Discs:" />
        <controls:MultiSelectionListBox Grid.Column="3" Grid.Row="1" Margin="5,0,0,0" BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueLightBrush}"
                                     Style="{StaticResource MaterialDesignListBox}" ScrollViewer.HorizontalScrollBarVisibility="Auto" SelectionMode="Extended"
                                     ItemsSource="{Binding AvailableDiscsViewModel.AvailableDiscs}" SelectedItemsList="{Binding AvailableDiscsViewModel.SelectedItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="Padding" Value="1"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Title}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </controls:MultiSelectionListBox>
    </Grid>
</Window>
